"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Env_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Env"));
const Application_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Application"));
const driveConfig = {
    disk: Env_1.default.get('DRIVE_DISK'),
    disks: {
        local: {
            driver: 'local',
            visibility: 'public',
            root: Application_1.default.tmpPath('uploads'),
            serveFiles: true,
            basePath: '/uploads',
        },
    },
};
exports.default = driveConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkcml2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQU9BLGdGQUFzQztBQUV0QyxnR0FBc0Q7QUFXdEQsTUFBTSxXQUFXLEdBQWdCO0lBVS9CLElBQUksRUFBRSxhQUFHLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQztJQUUzQixLQUFLLEVBQUU7UUFVTCxLQUFLLEVBQUU7WUFDTCxNQUFNLEVBQUUsT0FBTztZQUNmLFVBQVUsRUFBRSxRQUFRO1lBV3BCLElBQUksRUFBRSxxQkFBVyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7WUFZcEMsVUFBVSxFQUFFLElBQUk7WUFZaEIsUUFBUSxFQUFFLFVBQVU7U0FDckI7S0FnRUY7Q0FDRixDQUFBO0FBRUQsa0JBQWUsV0FBVyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvbmZpZyBzb3VyY2U6IGh0dHBzOi8vZ2l0LmlvL0pCdDNvXHJcbiAqXHJcbiAqIEZlZWwgZnJlZSB0byBsZXQgdXMga25vdyB2aWEgUFIsIGlmIHlvdSBmaW5kIHNvbWV0aGluZyBicm9rZW4gaW4gdGhpcyBjb25maWdcclxuICogZmlsZS5cclxuICovXHJcblxyXG5pbXBvcnQgRW52IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvRW52J1xyXG5pbXBvcnQgeyBEcml2ZUNvbmZpZyB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvRHJpdmUnXHJcbmltcG9ydCBBcHBsaWNhdGlvbiBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0FwcGxpY2F0aW9uJ1xyXG5cclxuLypcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnwgRHJpdmUgQ29uZmlnXHJcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG58XHJcbnwgVGhlIGBEcml2ZUNvbmZpZ2AgcmVsaWVzIG9uIHRoZSBgRGlza3NMaXN0YCBpbnRlcmZhY2Ugd2hpY2ggaXNcclxufCBkZWZpbmVkIGluc2lkZSB0aGUgYGNvbnRyYWN0c2AgZGlyZWN0b3J5LlxyXG58XHJcbiovXHJcbmNvbnN0IGRyaXZlQ29uZmlnOiBEcml2ZUNvbmZpZyA9IHtcclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgRGVmYXVsdCBkaXNrXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfFxyXG4gIHwgVGhlIGRlZmF1bHQgZGlzayB0byB1c2UgZm9yIG1hbmFnaW5nIGZpbGUgdXBsb2Fkcy4gVGhlIHZhbHVlIGlzIGRyaXZlbiBieVxyXG4gIHwgdGhlIGBEUklWRV9ESVNLYCBlbnZpcm9ubWVudCB2YXJpYWJsZS5cclxuICB8XHJcbiAgKi9cclxuICBkaXNrOiBFbnYuZ2V0KCdEUklWRV9ESVNLJyksXHJcblxyXG4gIGRpc2tzOiB7XHJcbiAgICAvKlxyXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICB8IExvY2FsXHJcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHxcclxuICAgIHwgVXNlcyB0aGUgbG9jYWwgZmlsZSBzeXN0ZW0gdG8gbWFuYWdlIGZpbGVzLiBNYWtlIHN1cmUgdG8gdHVybiBvZmYgc2VydmluZ1xyXG4gICAgfCBmaWxlcyB3aGVuIG5vdCB1c2luZyB0aGlzIGRpc2suXHJcbiAgICB8XHJcbiAgICAqL1xyXG4gICAgbG9jYWw6IHtcclxuICAgICAgZHJpdmVyOiAnbG9jYWwnLFxyXG4gICAgICB2aXNpYmlsaXR5OiAncHVibGljJyxcclxuXHJcbiAgICAgIC8qXHJcbiAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICB8IFN0b3JhZ2Ugcm9vdCAtIExvY2FsIGRyaXZlciBvbmx5XHJcbiAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICB8XHJcbiAgICAgIHwgRGVmaW5lIGFuIGFic29sdXRlIHBhdGggdG8gdGhlIHN0b3JhZ2UgZGlyZWN0b3J5IGZyb20gd2hlcmUgdG8gcmVhZCB0aGVcclxuICAgICAgfCBmaWxlcy5cclxuICAgICAgfFxyXG4gICAgICAqL1xyXG4gICAgICByb290OiBBcHBsaWNhdGlvbi50bXBQYXRoKCd1cGxvYWRzJyksXHJcblxyXG4gICAgICAvKlxyXG4gICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICAgfCBTZXJ2ZSBmaWxlcyAtIExvY2FsIGRyaXZlciBvbmx5XHJcbiAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICB8XHJcbiAgICAgIHwgV2hlbiB0aGlzIGlzIHNldCB0byB0cnVlLCBBZG9uaXNKUyB3aWxsIGNvbmZpZ3VyZSBhIGZpbGVzIHNlcnZlciB0byBzZXJ2ZVxyXG4gICAgICB8IGZpbGVzIGZyb20gdGhlIGRpc2sgcm9vdC4gVGhpcyBpcyBkb25lIHRvIG1pbWljIHRoZSBiZWhhdmlvciBvZiBjbG91ZFxyXG4gICAgICB8IHN0b3JhZ2Ugc2VydmljZXMgdGhhdCBoYXMgaW5idWlsdCBjYXBhYmlsaXRpZXMgdG8gc2VydmUgZmlsZXMuXHJcbiAgICAgIHxcclxuICAgICAgKi9cclxuICAgICAgc2VydmVGaWxlczogdHJ1ZSxcclxuXHJcbiAgICAgIC8qXHJcbiAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICB8IEJhc2UgcGF0aCAtIExvY2FsIGRyaXZlciBvbmx5XHJcbiAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICB8XHJcbiAgICAgIHwgQmFzZSBwYXRoIGlzIGFsd2F5cyByZXF1aXJlZCB3aGVuIFwic2VydmVGaWxlcyA9IHRydWVcIi4gQWxzbyBtYWtlIHN1cmVcclxuICAgICAgfCB0aGUgYGJhc2VQYXRoYCBpcyB1bmlxdWUgYWNyb3NzIGFsbCB0aGUgZGlza3MgdXNpbmcgXCJsb2NhbFwiIGRyaXZlciBhbmRcclxuICAgICAgfCB5b3UgYXJlIG5vdCByZWdpc3RlcmluZyByb3V0ZXMgd2l0aCB0aGlzIHByZWZpeC5cclxuICAgICAgfFxyXG4gICAgICAqL1xyXG4gICAgICBiYXNlUGF0aDogJy91cGxvYWRzJyxcclxuICAgIH0sXHJcblxyXG4gICAgLypcclxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgfCBTMyBEcml2ZXJcclxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgfFxyXG4gICAgfCBVc2VzIHRoZSBTMyBjbG91ZCBzdG9yYWdlIHRvIG1hbmFnZSBmaWxlcy4gTWFrZSBzdXJlIHRvIGluc3RhbGwgdGhlIHMzXHJcbiAgICB8IGRyaXZlIHNlcGFyYXRlbHkgd2hlbiB1c2luZyBpdC5cclxuICAgIHxcclxuICAgIHwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4gICAgfCBucG0gaSBAYWRvbmlzanMvZHJpdmUtczNcclxuICAgIHwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4gICAgfFxyXG4gICAgKi9cclxuICAgIC8vIHMzOiB7XHJcbiAgICAvLyAgIGRyaXZlcjogJ3MzJyxcclxuICAgIC8vICAgdmlzaWJpbGl0eTogJ3B1YmxpYycsXHJcbiAgICAvLyAgIGtleTogRW52LmdldCgnUzNfS0VZJyksXHJcbiAgICAvLyAgIHNlY3JldDogRW52LmdldCgnUzNfU0VDUkVUJyksXHJcbiAgICAvLyAgIHJlZ2lvbjogRW52LmdldCgnUzNfUkVHSU9OJyksXHJcbiAgICAvLyAgIGJ1Y2tldDogRW52LmdldCgnUzNfQlVDS0VUJyksXHJcbiAgICAvLyAgIGVuZHBvaW50OiBFbnYuZ2V0KCdTM19FTkRQT0lOVCcpLFxyXG4gICAgLy8gfSxcclxuXHJcbiAgICAvKlxyXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICB8IEdDUyBEcml2ZXJcclxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgfFxyXG4gICAgfCBVc2VzIHRoZSBHb29nbGUgY2xvdWQgc3RvcmFnZSB0byBtYW5hZ2UgZmlsZXMuIE1ha2Ugc3VyZSB0byBpbnN0YWxsIHRoZSBHQ1NcclxuICAgIHwgZHJpdmUgc2VwYXJhdGVseSB3aGVuIHVzaW5nIGl0LlxyXG4gICAgfFxyXG4gICAgfCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiAgICB8IG5wbSBpIEBhZG9uaXNqcy9kcml2ZS1nY3NcclxuICAgIHwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4gICAgfFxyXG4gICAgKi9cclxuICAgIC8vIGdjczoge1xyXG4gICAgLy8gICBkcml2ZXI6ICdnY3MnLFxyXG4gICAgLy8gICB2aXNpYmlsaXR5OiAncHVibGljJyxcclxuICAgIC8vICAga2V5RmlsZW5hbWU6IEVudi5nZXQoJ0dDU19LRVlfRklMRU5BTUUnKSxcclxuICAgIC8vICAgYnVja2V0OiBFbnYuZ2V0KCdHQ1NfQlVDS0VUJyksXHJcblxyXG4gICAgLypcclxuICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAgIHwgVW5pZm9ybSBBQ0wgLSBHb29nbGUgY2xvdWQgc3RvcmFnZSBvbmx5XHJcbiAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICB8XHJcbiAgICAgIHwgV2hlbiB1c2luZyB0aGUgVW5pZm9ybSBBQ0wgb24gdGhlIGJ1Y2tldCwgdGhlIFwidmlzaWJpbGl0eVwiIG9wdGlvbiBpc1xyXG4gICAgICB8IGlnbm9yZWQuIFNpbmNlLCB0aGUgZmlsZXMgQUNMIGlzIG1hbmFnZWQgYnkgdGhlIGdvb2dsZSBidWNrZXQgcG9saWNpZXNcclxuICAgICAgfCBkaXJlY3RseS5cclxuICAgICAgfFxyXG4gICAgICB8KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuICAgICAgfCBMZWFybiBtb3JlOiBodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vc3RvcmFnZS9kb2NzL3VuaWZvcm0tYnVja2V0LWxldmVsLWFjY2Vzc1xyXG4gICAgICB8KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuICAgICAgfFxyXG4gICAgICB8IFRoZSBmb2xsb3dpbmcgb3B0aW9uIGp1c3QgaW5mb3JtcyBkcml2ZSB3aGV0aGVyIHlvdXIgYnVja2V0IGlzIHVzaW5nIHVuaWZvcm1cclxuICAgICAgfCBBQ0wgb3Igbm90LiBUaGUgYWN0dWFsIHNldHRpbmcgbmVlZHMgdG8gYmUgdG9nZ2xlZCB3aXRoaW4gdGhlIEdvb2dsZSBjbG91ZFxyXG4gICAgICB8IGNvbnNvbGUuXHJcbiAgICAgIHxcclxuICAgICAgKi9cclxuICAgIC8vICAgdXNpbmdVbmlmb3JtQWNsOiBmYWxzZVxyXG4gICAgLy8gfSxcclxuICB9LFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBkcml2ZUNvbmZpZ1xyXG4iXX0=